// <auto-generated />
using MERAS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace MERAS.Migrations
{
    [DbContext(typeof(MerasContext))]
    partial class MerasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MERAS.Models.ApplyForList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ApplyDate");

                    b.Property<int>("InternshipID");

                    b.Property<int>("StudentID");

                    b.HasKey("ID");

                    b.HasIndex("InternshipID");

                    b.HasIndex("StudentID");

                    b.ToTable("ApplyForList");
                });

            modelBuilder.Entity("MERAS.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ContactEmail");

                    b.Property<string>("ContactFirstName")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("ContactLastName")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("ContactPhone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.HasKey("ID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("MERAS.Models.Department", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2);

                    b.Property<int?>("InternshipID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.HasKey("ID");

                    b.HasIndex("InternshipID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("MERAS.Models.Internship", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ApplyFinishtDate");

                    b.Property<DateTime>("ApplyStartDate");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<int>("CompanyID");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<DateTime>("FinishtDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Internship");
                });

            modelBuilder.Entity("MERAS.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AssignedInternshipID");

                    b.Property<int>("CreditHrs");

                    b.Property<string>("DepartmentID")
                        .HasMaxLength(2);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("Phone");

                    b.Property<int>("SupervisorID");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("SupervisorID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("MERAS.Models.Supervisor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DepartmentID")
                        .HasMaxLength(2);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<string>("Phone");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Supervisor");
                });

            modelBuilder.Entity("MERAS.Models.ApplyForList", b =>
                {
                    b.HasOne("MERAS.Models.Internship", "Internship")
                        .WithMany("ApplyForLists")
                        .HasForeignKey("InternshipID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MERAS.Models.Student", "Student")
                        .WithMany("ApplyForLists")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MERAS.Models.Department", b =>
                {
                    b.HasOne("MERAS.Models.Internship")
                        .WithMany("Departments")
                        .HasForeignKey("InternshipID");
                });

            modelBuilder.Entity("MERAS.Models.Internship", b =>
                {
                    b.HasOne("MERAS.Models.Company", "Companies")
                        .WithMany("Internships")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MERAS.Models.Student", b =>
                {
                    b.HasOne("MERAS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("MERAS.Models.Supervisor", "Supervisor")
                        .WithMany("Students")
                        .HasForeignKey("SupervisorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MERAS.Models.Supervisor", b =>
                {
                    b.HasOne("MERAS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");
                });
#pragma warning restore 612, 618
        }
    }
}
